import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import { Box, Breadcrumbs, Chip, Grid, IconButton, Typography, useTheme, Link } from '@mui/material';
import React from 'react';
import { useTranslation } from 'react-i18next';
import { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/components/shared/breadcrumb/Breadcrumb';
import DashboardCard from 'src/components/shared/DashboardCard';

const EHVulnerabilityDetail: React.FC = () => {
  const location = useLocation();
  const vulnerability = location.state?.vulnerability || {};
  const nameReport = location.state?.nameReport || '';
  const ehReportId = location.state?.ehReportId || '';
  const theme = useTheme();
  const { t } = useTranslation();
  const navigate = useNavigate();

  if (!vulnerability) {
    return (
      <PageContainer title="Akila">
        <Box display="flex" justifyContent="center" alignItems="center" height="300px">
          <Typography variant="h6">{t('vulnerability.not_found')}</Typography>
        </Box>
      </PageContainer>
    );
  }

  const { high, medium, low, critical } = theme.palette.level;

  return (
    <PageContainer title="Akila">
      <Box display="flex" alignItems="center" mb={2}>
        <IconButton onClick={() => navigate(-1)} color="primary">
          <ArrowBackIcon />
        </IconButton>
        <Breadcrumbs aria-label="breadcrumb">
          <Link component={RouterLink} color="inherit" to="/vulnerabilities/redteam">
            {t('menu.vulnerabilities')}
          </Link>
          <Link component={RouterLink} color="inherit" to="/vulnerabilities/redteam">
            {t('menu.redteam')}
          </Link>
          <Link component={RouterLink} color="inherit" to={`/vulnerabilities/redteam/${ehReportId}`}>
            {t("redteam.ethical_hacking_reports")}
          </Link>
          <Link component={RouterLink} color="inherit" to={`/vulnerabilities/redteam/${ehReportId}`}>
            {nameReport}
          </Link>
          <Typography color="textPrimary">
            {vulnerability.vulnerability}
          </Typography>
        </Breadcrumbs>
      </Box>
      <Box mb={2}>
        <Breadcrumb title={`Vulnerability: ${vulnerability.vulnerability}`}>
          <Box display="flex" flexWrap="wrap" gap={1} mb={3}>
            <Chip
              label={`${t("redteam.risk_level")}: ${vulnerability.port_protocol}`}
              size="small"
              variant="outlined"
              style={{
                borderColor:
                  vulnerability.risk === 'critical'
                    ? critical
                    : vulnerability.risk === 'high'
                      ? high
                      : vulnerability.risk === 'medium'
                        ? medium
                        : low,
                color:
                  vulnerability.risk === 'critical'
                    ? critical
                    : vulnerability.risk === 'high'
                      ? high
                      : vulnerability.risk === 'medium'
                        ? medium
                        : low,
              }}
            />
            <Chip
              label={`${t("redteam.impact")}: ${vulnerability.impact}`}
              size="small"
              variant="outlined"
              style={{
                borderColor:
                  vulnerability.impact === 'critical'
                    ? critical
                    : vulnerability.impact === 'high'
                      ? high
                      : vulnerability.impact === 'medium'
                        ? medium
                        : low,
                color:
                  vulnerability.impact === 'critical'
                    ? critical
                    : vulnerability.impact === 'high'
                      ? high
                      : vulnerability.impact === 'medium'
                        ? medium
                        : low,
              }}
            />
            <Chip
              label={`${t("redteam.probability_of_occurrence")}: ${vulnerability.probability_occurrence}`}
              size="small"
              variant="outlined"
              style={{
                borderColor:
                  vulnerability.probability_occurrence === 'critical'
                    ? critical
                    : vulnerability.probability_occurrence === 'high'
                      ? high
                      : vulnerability.probability_occurrence === 'medium'
                        ? medium
                        : low,
                color:
                  vulnerability.probability_occurrence === 'critical'
                    ? critical
                    : vulnerability.probability_occurrence === 'high'
                      ? high
                      : vulnerability.probability_occurrence === 'medium'
                        ? medium
                        : low,
              }}
            />

            <Chip
              label={`${t("redteam.exploitable")}: ${vulnerability.exploitable ? t('redteam.yes') :t('redteam.no')}`}
              size="small"
              variant="outlined"
              style={{
                borderColor: vulnerability.exploitable ? high : low,
                color: vulnerability.exploitable ? high : low,
              }}
            />

          </Box>
        </Breadcrumb>
      </Box>
      <DashboardCard title={t('redteam.vulnerability_details')!}>
        <Grid container spacing={3}>
          <Grid item xs={12} lg={6}>
            <Typography variant="h6" gutterBottom>
              {t('redteam.identifier')}
            </Typography>
            <Typography variant="body1" gutterBottom>
              {vulnerability.identifier}
            </Typography>
          </Grid>

          <Grid item xs={12} lg={6}>
            <Typography variant="h6" gutterBottom>
              {t("redteam.host")}
            </Typography>
            <Typography variant="body1" gutterBottom>
              {vulnerability.host}
            </Typography>
          </Grid>

          <Grid item xs={12} lg={6}>
            <Typography variant="h6" gutterBottom>
              {t("redteam.port")}
            </Typography>
            <Typography variant="body1" gutterBottom>
              {vulnerability.port_protocol}
            </Typography>
          </Grid>

          <Grid item xs={12} lg={6}>
            <Typography variant="h6" gutterBottom>
            {t("redteam.cvss_score")}
            </Typography>
            <Typography variant="body1" gutterBottom>
              {vulnerability.cvss_score}
            </Typography>
          </Grid>

          <Grid item xs={12} lg={12}>
            <Typography variant="h6" gutterBottom>
              {t("redteam.affected_components")}
            </Typography>
            <Typography variant="body1" gutterBottom>
              {vulnerability.affected_components}
            </Typography>
          </Grid>

          <Grid item xs={12} lg={12}>
            <Typography variant="h6" gutterBottom>
              {t("redteam.description")}
            </Typography>
            <Typography variant="body1" gutterBottom>
              {vulnerability.description}
            </Typography>
          </Grid>

          <Grid item xs={12} lg={12}>
            <Typography variant="h6" gutterBottom>
              {t("redteam.solution")}
            </Typography>
            <Typography variant="body1" gutterBottom>
              {vulnerability.solution}
            </Typography>
          </Grid>
        </Grid>
      </DashboardCard>
    </PageContainer>
  );
};

export default EHVulnerabilityDetail;