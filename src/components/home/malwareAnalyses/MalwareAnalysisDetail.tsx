import React from 'react';
import { Grid, Box, Chip, Table, TableBody, TableCell, TableHead, TableRow, Typography, TableContainer, IconButton, Stack, LinearProgress } from '@mui/material';
import DashboardCard from 'src/components/shared/DashboardCard';
import Breadcrumb from 'src/components/shared/breadcrumb/Breadcrumb';
import VisibilityIcon from '@mui/icons-material/Visibility';
import TranslateIcon from '@mui/icons-material/Translate';
// import PluginVersionTable from './pluginVersionTable';
// import WpScanTopCards from './wpScantopCards';

const WpScanDetail: React.FC<{ malwareAnalysisId: string, onAlertClick: (alertId: string) => void; }> = ({ malwareAnalysisId, onAlertClick }) => {

  const analysisReport = {
    id: 1,
    summary: {
      file: "f2e7fcb20146.exe",
      size: 275.0,
      type: "PE32 executable (GUI) Intel 80386, for MS Windows",
      md5: "9f5aaba5a45e58b62cf44460a6e8e7e3",
      sha1: "03532bab162af0e7bb0953f29730a439c0b803fd",
      sha256: "2468722fef139e68cbf0cb1f8f531b9e61abd9cfacd450868015052d5a00fb5d",
      sha512: "17cd4b8d7972f189150f4c4d85d2ff469d02cd51d8f92bbc4c5184917e6f59c5de3fdb709897a665d4a32331bcccbeea0fba8db9faffb020918aae64257c8b9d",
      crc32: "00F3327E",
      ssdeep: "None",
      yara: [
        "anti_dbg - Checks if being debugged",
        "win_files_operation - Affect private profile"
      ],
      score: 10
    },
    informationExecution: {
      category: "FILE",
      started: "Oct. 22, 2024, 11:10 p.m.",
      completed: "Oct. 22, 2024, 11:11 p.m.",
      duration: "45 seconds",
      routing: "internet",
      logs: [
        {
          type: "Analyzer Log",
          log: [
            "2024-10-22 23:10:34,015 [analyzer] DEBUG: Starting analyzer from: C:\\tmpd0os1j",
            "2024-10-22 23:10:34,015 [analyzer] DEBUG: Pipe server name: \\PIPE\\JUqBuioggeRAOFXNMUaQHUpyvux",
            "2024-10-22 23:10:34,015 [analyzer] DEBUG: Log pipe server name: ?\\PIPE\\kIhdBbrUWRTiNjccCXkMychtrJvuIlIu",
            "2024-10-22 23:10:34,328 [analyzer] DEBUG: Started auxiliary module Curtain",
            "2024-10-22 23:10:34,328 [analyzer] DEBUG: Started auxiliary module DbgView",
            "2024-10-22 23:10:34,765 [analyzer] DEBUG: Started auxiliary module Disguise",
            "2024-10-22 23:10:34,983 [analyzer] DEBUG: Loaded monitor into process with pid 512",
            "2024-10-22 23:10:34,983 [analyzer] DEBUG: Started auxiliary module DumpTLSMasterSecrets",
            "2024-10-22 23:10:34,983 [analyzer] DEBUG: Started auxiliary module Human",
            "2024-10-22 23:10:34,983 [analyzer] DEBUG: Started auxiliary module InstallCertificate",
            "2024-10-22 23:10:34,983 [analyzer] DEBUG: Started auxiliary module Reboot",
            "2024-10-22 23:10:35,078 [analyzer] DEBUG: Started auxiliary module RecentFiles",
            "2024-10-22 23:10:35,078 [analyzer] DEBUG: Started auxiliary module Screenshots",
            "2024-10-22 23:10:35,078 [analyzer] DEBUG: Started auxiliary module Sysmon",
            "2024-10-22 23:10:35,078 [analyzer] DEBUG: Started auxiliary module LoadZer0m0n",
            "2024-10-22 23:10:35,203 [lib.api.process] INFO: Successfully executed process from path u'C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\f2e7fcb20146.exe' with arguments '' and pid 2164",
            "2024-10-22 23:10:35,358 [analyzer] DEBUG: Loaded monitor into process with pid 2164",
            "2024-10-22 23:10:35,905 [analyzer] INFO: Injected into process with pid 820 and name u'MSBuild.exe'",
            "2024-10-22 23:10:36,015 [lib.api.process] ERROR: Failed to dump memory of 32-bit process with pid 820.",
            "2024-10-22 23:10:36,217 [analyzer] DEBUG: Loaded monitor into process with pid 820",
            "2024-10-22 23:10:36,217 [analyzer] INFO: Process with pid 2164 has terminated",
            "2024-10-22 23:10:37,233 [analyzer] INFO: Process with pid 820 has terminated",
            "2024-10-22 23:10:37,233 [analyzer] INFO: Process list is empty, terminating analysis.",
            "2024-10-22 23:10:38,467 [analyzer] INFO: Terminating remaining processes before shutdown.",
            "2024-10-22 23:10:38,467 [analyzer] INFO: Analysis completed."
          ]
        },
        {
          type: "Cuckoo Log",
          log: [
            "2024-10-22 23:10:45,528 [cuckoo.core.scheduler] INFO: Task #5335245: acquired machine win7x6429 (label=win7x6429)",
            "2024-10-22 23:10:45,528 [cuckoo.core.resultserver] DEBUG: Now tracking machine 192.168.168.229 for task #5335245",
            "2024-10-22 23:10:45,899 [cuckoo.auxiliary.sniffer] INFO: Started sniffer with PID 3190566 (interface=vboxnet0, host=192.168.168.229)",
            "2024-10-22 23:10:46,378 [cuckoo.machinery.virtualbox] DEBUG: Starting vm win7x6429",
            "2024-10-22 23:10:47,094 [cuckoo.machinery.virtualbox] DEBUG: Restoring virtual machine win7x6429 to vmcloak",
            "2024-10-22 23:11:08,838 [cuckoo.core.guest] INFO: Starting analysis #5335245 on guest (id=win7x6429, ip=192.168.168.229)",
            "2024-10-22 23:11:09,845 [cuckoo.core.guest] DEBUG: win7x6429: not ready yet",
            "2024-10-22 23:11:14,879 [cuckoo.core.guest] INFO: Guest is running Cuckoo Agent 0.10 (id=win7x6429, ip=192.168.168.229)",
            "2024-10-22 23:11:14,957 [cuckoo.core.guest] DEBUG: Uploading analyzer to guest (id=win7x6429, ip=192.168.168.229, monitor=latest, size=6660546)",
            "2024-10-22 23:11:16,181 [cuckoo.core.resultserver] DEBUG: Task #5335245: live log analysis.log initialized.",
            "2024-10-22 23:11:17,116 [cuckoo.core.resultserver] DEBUG: Task #5335245 is sending a BSON stream",
            "2024-10-22 23:11:17,490 [cuckoo.core.resultserver] DEBUG: Task #5335245 is sending a BSON stream",
            "2024-10-22 23:11:18,288 [cuckoo.core.resultserver] DEBUG: Task #5335245 is sending a BSON stream",
            "2024-10-22 23:11:18,431 [cuckoo.core.resultserver] DEBUG: Task #5335245: File upload for 'shots/0001.jpg'",
            "2024-10-22 23:11:18,452 [cuckoo.core.resultserver] DEBUG: Task #5335245 uploaded file length: 133438",
            "2024-10-22 23:11:20,547 [cuckoo.core.resultserver] DEBUG: Task #5335245: File upload for 'curtain/1729631438.34.curtain.log'",
            "2024-10-22 23:11:20,553 [cuckoo.core.resultserver] DEBUG: Task #5335245 uploaded file length: 36",
            "2024-10-22 23:11:20,661 [cuckoo.core.resultserver] DEBUG: Task #5335245: File upload for 'procdump/1729631438.34/procdump.log'",
            "2024-10-22 23:11:20,667 [cuckoo.core.resultserver] DEBUG: Task #5335245 uploaded file length: 198",
            "2024-10-22 23:11:20,789 [cuckoo.core.resultserver] DEBUG: Task #5335245: File upload for 'shots/0002.jpg'",
            "2024-10-22 23:11:20,791 [cuckoo.core.resultserver] DEBUG: Task #5335245 uploaded file length: 136065",
            "2024-10-22 23:11:21,208 [cuckoo.core.resultserver] DEBUG: Task #5335245: File upload for 'shots/0003.jpg'",
            "2024-10-22 23:11:21,210 [cuckoo.core.resultserver] DEBUG: Task #5335245 uploaded file length: 145042",
            "2024-10-22 23:11:23,453 [cuckoo.core.resultserver] DEBUG: Task #5335245: File upload for 'shots/0004.jpg'",
            "2024-10-22 23:11:23,455 [cuckoo.core.resultserver] DEBUG: Task #5335245 uploaded file length: 142968"
          ]
        }
      ]
    },
    signatures: [
      {
        title: "Queries for the computer name",
        event: 2,
        type: "info",
        details: [
          {
            api: "GetComputerNameA",
            time: "Oct. 23, 2024, 12:10 a.m.",
            arguments: "computer_name: RAWJDBQVXIMOE",
            status: 1,
            return: 1,
            repeated: 0
          },
          {
            api: "GetComputerNameW",
            time: "Oct. 23, 2024, 12:10 a.m.",
            arguments: "computer_name: RAWJDBQVXIMOE",
            status: 1,
            return: 1,
            repeated: 0
          }
        ]
      },
      {
        title: "Yara rules detected for file",
        event: 2,
        type: "info",
        rules: [
          {
            description: "Checks if being debugged",
            rule: "anti_dbg"
          },
          {
            description: "Affect private profile",
            rule: "win_files_operation"
          }
        ]
      },
      {
        title: "Unknown PE section names",
        event: 1,
        type: "info",
        sections: [
          {
            value: ".AAA"
          }
        ]
      },
      {
        title: "Checks if process is being debugged by a debugger",
        event: 2,
        type: "info",
        details: [
          {
            api: "IsDebuggerPresent",
            time: "Oct. 23, 2024, 12:10 a.m.",
            arguments: "",
            status: 1,
            return: 1,
            repeated: 0
          }
        ]
      }
    ]
  };

  return (
    <Grid container spacing={3}>
      {/* Scan Metadata Section */}
      <Grid item xs={12} xl={12}>
        {/* <WpScanTopCards/> */}
      </Grid>
      <Grid item xs={12} xl={6}>
        <DashboardCard>
          {/* <PluginVersionTable /> */}
        </DashboardCard>
      </Grid>

      <Grid item xs={12} xl={6}>
        {/* <Breadcrumb title={scanName}>
          <Box display="flex" flexWrap="wrap" gap={1} mb={3}>
            <Chip label={`Status: ${status.toLocaleString()}`} color="info" variant="filled" />
            <Chip label={`Version: ${version}`} color="secondary" variant="outlined" />
            <Chip label={`Site URL: ${mockSitesUrl}`} color="info" variant="outlined" />
            <Chip label={`Effective URL: ${effectiveUrl}`} color="warning" variant="outlined" />
          </Box>
        </Breadcrumb> */}
        <DashboardCard title="Detalles del archivo" subtitle="Detalles del anÃ¡lisis de malware">
          <Box display="flex" flexDirection="column" gap={2} mt={3}>
            
          <Box>
              <Stack
                direction="row"
                spacing={2}
                mb={1}
                justifyContent="space-between"
                alignItems="center"
              >
                <Box>
                  <Typography variant="h6">{"Trust"}</Typography>
                </Box>
                <Chip
                  sx={{
                    backgroundColor: 'primary',
                    color: 'primary',
                    borderRadius: '4px',
                    width: 55,
                    height: 24,
                  }}
                  label={analysisReport.summary.score + '%'}
                />
              </Stack>
              <LinearProgress value={analysisReport.summary.score} variant="determinate" color={'primary'} />
            </Box>
            <Box>
              <Typography variant="subtitle2" fontWeight={600}>
                File Name:
              </Typography>
              <Typography variant="body2">{analysisReport.summary.file}</Typography>
            </Box>

            <Box>
              <Typography variant="subtitle2" fontWeight={600}>
                Size:
              </Typography>
              <Typography variant="body2">
                  {analysisReport.summary.size}
              </Typography>
            </Box>

            <Box>
              <Typography variant="subtitle2" fontWeight={600}>
                Type:
              </Typography>
              <Typography variant="body2">{analysisReport.summary.type}</Typography>
            </Box>

            <Box>
              <Typography variant="subtitle2" fontWeight={600}>
                MD5:
              </Typography>
              <Typography variant="body2">{analysisReport.summary.md5}</Typography>
            </Box>

            <Box>
              <Typography variant="subtitle2" fontWeight={600}>
                SHA1:
              </Typography>
              <Typography variant="body2">{analysisReport.summary.sha1}</Typography>
            </Box>

            <Box>
              <Typography variant="subtitle2" fontWeight={600}>
                SHA256:
              </Typography>
              <Typography variant="body2">{analysisReport.summary.sha256}</Typography>
            </Box>

            <Box>
              <Typography variant="subtitle2" fontWeight={600}>
                SHA512:
              </Typography>
              <Typography variant="body2">
                  {analysisReport.summary.sha512}
              </Typography>
            </Box>

            <Box>
              <Typography variant="subtitle2" fontWeight={600}>
                CRC32:
              </Typography>
              <Typography variant="body2">{analysisReport.summary.crc32}</Typography>
            </Box>

            <Box>
              <Typography variant="subtitle2" fontWeight={600}>
                SSDEEP:
              </Typography>
              <Typography variant="body2">
                  {analysisReport.summary.ssdeep}
              </Typography>
            </Box>

            <Box>
              <Typography variant="subtitle2" fontWeight={600}>
                Yara:
              </Typography>
              {analysisReport.summary.yara.map((rule, index) => (
                <Typography key={index} variant="body2">
                  {rule}
                </Typography>
              ))}
            </Box>
          </Box>
        </DashboardCard>

      </Grid>
      {/* Alerts Table Section */}
      <Grid item xs={12} xl={12}>
        <DashboardCard>
          <TableContainer>
            <Table>
              <TableHead>
                <TableRow>
                  <TableCell><Typography variant="subtitle2" fontWeight={600}>URL</Typography></TableCell>
                  <TableCell><Typography variant="subtitle2" fontWeight={600}>DescripciÃ³n</Typography></TableCell>
                  <TableCell><Typography variant="subtitle2" fontWeight={600}>Tipo</Typography></TableCell>
                  <TableCell><Typography variant="subtitle2" fontWeight={600}>Encontrado por</Typography></TableCell>
                  <TableCell><Typography variant="subtitle2" fontWeight={600}>Confianza</Typography></TableCell>
                  <TableCell><Typography variant="subtitle2" fontWeight={600}>Referencias</Typography></TableCell>
                  <TableCell><Typography variant="subtitle2" fontWeight={600}>Entradas interesantes</Typography></TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {mockAlerts.map((alert) => (
                  <TableRow key={alert.id}>
                    <TableCell>
                      <Typography variant="body2" color="primary" style={{ cursor: 'pointer' }}>
                        {alert.url}
                      </Typography>
                    </TableCell>
                    <TableCell>
                      <Typography variant="body2">{alert.description}</Typography>
                    </TableCell>
                    <TableCell>
                      <Typography variant="body2">{alert.type}</Typography>
                    </TableCell>
                    <TableCell>
                      <Typography variant="body2">{alert.foundBy}</Typography>
                    </TableCell>
                    <TableCell>
                      <Typography variant="body2">{alert.confidence}</Typography>
                    </TableCell>
                    <TableCell>
                      <Typography variant="body2">{alert.references}</Typography>
                    </TableCell>
                    <TableCell>
                      {alert.entries && (
                        <Box display="flex" gap={1}>
                          <IconButton color="primary" onClick={() => onAlertClick(alert.id)}>
                            <VisibilityIcon />
                          </IconButton>
                          <IconButton color="primary">
                            <TranslateIcon />
                          </IconButton>
                        </Box>
                      )}
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
        </DashboardCard>
      </Grid>
    </Grid>
  );
};

export default WpScanDetail;
