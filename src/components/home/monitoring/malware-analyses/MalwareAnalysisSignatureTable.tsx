
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Typography,
} from '@mui/material';

const SignatureTable = ({ signature }) => {
  if (!signature || !signature.table || !signature.table.headers || !signature.table.rows) {
    return <Typography variant="body2">No data available.</Typography>;
  }

  return (
    <TableContainer>
      <Table>
        <TableHead>
          <TableRow>
            {signature.table.headers.map((header, headerIndex) => (
              <TableCell key={headerIndex}>
                <Typography variant="subtitle2" fontWeight={600}>
                  {header}
                </Typography>
              </TableCell>
            ))}
          </TableRow>
        </TableHead>
        <TableBody>
          {signature.table.rows.map((row, rowIndex) => (
            <TableRow key={rowIndex}>
              { (row.api || row.time) && (
                <TableCell key="api-time">
                  <Typography variant="body2">
                    {row.api && row.time ? `${row.api} - ${row.time}` : row.api || row.time}
                  </Typography>
                </TableCell>
              )}
              {Object.keys(row).map((key, cellIndex) =>
                (key !== "api" && key !== "time") ? (
                  <TableCell key={cellIndex}>
                    <Typography variant="body2">
                      {row[key]}
                    </Typography>
                  </TableCell>
                ) : null
              )}
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </TableContainer>
  );
};

export default SignatureTable;
